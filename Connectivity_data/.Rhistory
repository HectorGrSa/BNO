library("igraph")
library("plyr")
archiu <- read.csv("NeuronConnect.csv",sep = ";")
library("igraph")
library("plyr")
load("celegans_data.RData")
setwd("C:/Users/hecto/OneDrive/Escritorio/BNO/Connectivity_data")
load("celegans_data.RData")
load("celegansER_data.RData")
load("celegansSW_data.RData")
load("celegansBA_data.RData")
load("FlyEM_SW_data.RData")
library("igraph")
library("plyr")
ba_fly <-  sample_pa(n=length(unique(archiuFly[,1])), power=1, m=11,  directed=T)
#plot(ba_fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_baFly <- degree(ba_fly, mode="all")
deg.dist_baFlyF <- degree_distribution(ba_fly, cumulative=F, mode="all")
deg.dist_baFyT <- degree_distribution(ba_fly, cumulative=T, mode="all")
tirad_census_ba_fly = triad_census(ba_fly)
#Hubs
hs_ba_fly <- hub_score(ba_fly, weights=NA)$vector
#Authorities
as_baFly <- authority_score(ba_fly, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_ba_fly= transitivity(ba_fly)/mean_distance(ba_fly)
#modularity
library(leiden)
FlyEM_BA_data <- list()
FlyEM_BA_data[["deg_distF_FlyEM_BA"]] <- deg.dist_baFlyF
FlyEM_BA_data[["deg_distT_FlyEM_BA"]] <- deg.dist_baFyT
FlyEM_BA_data[["triad_census_FlyEM_BA"]] <- tirad_census_ba_fly
FlyEM_BA_data[["hub_score_FlyEM_BA"]] <- hs_ba_fly
FlyEM_BA_data[["modularity_FlyEM_BA"]] <- modularity_ba_fly
FlyEM_BA_data[["authority_score_FlyEM_BA"]] <- as_baFly
FlyEM_BA_data[["SW_ratio_FlyEM_BA"]] <- SM_Ratio_ba_fly
save(FlyEM_BA_data, file="FlyEM_BA_data.RData")
load("FlyEM_BA_data.RData")
archiuFly <- read.csv("v1.2_exported-traced-adjacencies-v1.2.csv",sep = ",",header = F,skip = 1)
archiuFly <- read.csv("v1.2_exported-traced-adjacencies-v1.2.csv",sep = ",",header = F,skip = 1)
ba_fly <-  sample_pa(n=length(unique(archiuFly[,1])), power=1, m=11,  directed=T)
#plot(ba_fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_baFly <- degree(ba_fly, mode="all")
deg.dist_baFlyF <- degree_distribution(ba_fly, cumulative=F, mode="all")
deg.dist_baFyT <- degree_distribution(ba_fly, cumulative=T, mode="all")
tirad_census_ba_fly = triad_census(ba_fly)
#Hubs
hs_ba_fly <- hub_score(ba_fly, weights=NA)$vector
#Authorities
as_baFly <- authority_score(ba_fly, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_ba_fly= transitivity(ba_fly)/mean_distance(ba_fly)
#modularity
library(leiden)
adj_mtx_ba_fly  <- igraph::as_adjacency_matrix(ba_fly)
wtc_ba_fly <- leiden(adj_mtx_sw_Fly)
modularity_ba_fly <- modularity(ba_fly, wtc_ba_fly)
FlyEM_BA_data <- list()
FlyEM_BA_data[["deg_distF_FlyEM_BA"]] <- deg.dist_baFlyF
FlyEM_BA_data[["deg_distT_FlyEM_BA"]] <- deg.dist_baFyT
FlyEM_BA_data[["triad_census_FlyEM_BA"]] <- tirad_census_ba_fly
FlyEM_BA_data[["hub_score_FlyEM_BA"]] <- hs_ba_fly
FlyEM_BA_data[["modularity_FlyEM_BA"]] <- modularity_ba_fly
FlyEM_BA_data[["authority_score_FlyEM_BA"]] <- as_baFly
FlyEM_BA_data[["SW_ratio_FlyEM_BA"]] <- SM_Ratio_ba_fly
save(FlyEM_BA_data, file="FlyEM_BA_data.RData")
load("FlyEM_BA_data.RData")
archiuFlyOPtic <- read.table("FlyCircuit.csv",sep = ";",row.names=1,header=T)
gFlyOptic <- graph_from_adjacency_matrix(as.matrix(archiuFlyOPtic))
gFlyOpticS <- simplify(gFlyOptic , remove.multiple = T, remove.loops = F, edge.attr.comb=c(weight="sum", type="ignore") )
l <- layout_with_fr(gFlyOpticS)
plot(gFlyOpticS, rescale=F, layout=l*0.4)
archiuFlyOPtic <- read.table("FlyCircuit.csv",sep = ";",row.names=1,header=T)
gFlyOptic <- graph_from_adjacency_matrix(as.matrix(archiuFlyOPtic))
gFlyOpticS <- simplify(gFlyOptic , remove.multiple = T, remove.loops = F, edge.attr.comb=c(weight="sum", type="ignore") )
l <- layout_with_fr(gFlyOpticS)
plot(gFlyOpticS, rescale=F, layout=l*0.4)
#Degree distribution
degFlyOptic <- degree(gFlyOpticS, mode="all")
deg.degFlyOF <- degree_distribution(gFlyOpticS, cumulative=F, mode="all")
deg.degFlyOT <- degree_distribution(gFlyOpticS, cumulative=T, mode="all")
tirad_census_FlyOptic = barplot(triad_census(gFlyOpticS), log="y")
tirad_census_FlyOptic
#Hubs
hs_FlyOptic <- hub_score(gFlyOpticS, weights=NA)$vector
hs_FlyOptic
#Authorities
as_FlyOptic <- authority_score(gFlyOpticS, weights=NA)$vector
as_FlyOptic
#Small-Worldness ratio:
SM_Ratio_FlyOptic= transitivity(gFlyOpticS)/mean_distance(gFlyOpticS)
#modularity
library(leiden)
adj_mtx_FlyOptic  <- igraph::as_adjacency_matrix(gFlyOpticS)
wtc_FlyOptic <- leiden(adj_mtx_FlyOptic)
modularity_FlyOptic <- modularity(gFlyOpticS, wtc_FlyOptic)
FlyOP_data <- list()
FlyOP_data[["deg_distF_FlyOP"]] <- deg.dist_baFlyF
FlyOP_data[["deg_distT_FlyOP"]] <- deg.dist_baFyT
FlyOP_data[["triad_census_FlyOP"]] <- tirad_census_ba_fly
FlyOP_data[["hub_score_FlyOP"]] <- hs_ba_fly
FlyOP_data[["modularity_FlyOP"]] <- modularity_ba_fly
FlyOP_data[["authority_score_FlyOP"]] <- as_baFly
FlyOP_data[["SW_ratio_FlyOP"]] <- SM_Ratio_ba_fly
save(FlyOP_data, file="FlyOP_data.RData")
load("FlyOP_data.RData")
#Degree distribution
degFlyOptic <- degree(gFlyOpticS, mode="all")
deg.degFlyOF <- degree_distribution(gFlyOpticS, cumulative=F, mode="all")
deg.degFlyOT <- degree_distribution(gFlyOpticS, cumulative=T, mode="all")
tirad_census_FlyOptic = barplot(triad_census(gFlyOpticS), log="y")
#Hubs
hs_FlyOptic <- hub_score(gFlyOpticS, weights=NA)$vector
#Authorities
as_FlyOptic <- authority_score(gFlyOpticS, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_FlyOptic= transitivity(gFlyOpticS)/mean_distance(gFlyOpticS)
#modularity
library(leiden)
adj_mtx_FlyOptic  <- igraph::as_adjacency_matrix(gFlyOpticS)
wtc_FlyOptic <- leiden(adj_mtx_FlyOptic)
modularity_FlyOptic <- modularity(gFlyOpticS, wtc_FlyOptic)
FlyOP_data <- list()
FlyOP_data[["deg_distF_FlyOP"]] <- deg.degFlyOF
FlyOP_data[["deg_distT_FlyOP"]] <- deg.degFlyOT
FlyOP_data[["triad_census_FlyOP"]] <- tirad_census_FlyOptic
FlyOP_data[["hub_score_FlyOP"]] <- hs_FlyOptic
FlyOP_data[["modularity_FlyOP"]] <- modularity_FlyOptic
FlyOP_data[["authority_score_FlyOP"]] <- as_FlyOptic
FlyOP_data[["SW_ratio_FlyOP"]] <- SM_Ratio_FlyOptic
save(FlyOP_data, file="FlyOP_data.RData")
load("FlyOP_data.RData")
View(celegans_data)
View(celegansBA_data)
View(celegansER_data)
View(celegansSW_data)
View(FlyEM_BA_data)
View(FlyEM_SW_data)
View(FlyOP_data)
ba_fly <-  sample_pa(n=length(unique(archiuFly[,1])), power=1, m=11,  directed=T)
#plot(ba_fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_baFly <- degree(ba_fly, mode="all")
deg.dist_baFlyF <- degree_distribution(ba_fly, cumulative=F, mode="all")
deg.dist_baFyT <- degree_distribution(ba_fly, cumulative=T, mode="all")
tirad_census_ba_fly = triad_census(ba_fly)
#Hubs
hs_ba_fly <- hub_score(ba_fly, weights=NA)$vector
#Authorities
as_baFly <- authority_score(ba_fly, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_ba_fly= transitivity(ba_fly)/mean_distance(ba_fly)
#modularity
library(leiden)
adj_mtx_ba_fly  <- igraph::as_adjacency_matrix(ba_fly)
wtc_ba_fly <- leiden(adj_mtx_ba_fly)
modularity_ba_fly <- modularity(ba_fly, wtc_ba_fly)
FlyEM_BA_data <- list()
FlyEM_BA_data[["deg_distF_FlyEM_BA"]] <- deg.dist_baFlyF
FlyEM_BA_data[["deg_distT_FlyEM_BA"]] <- deg.dist_baFyT
FlyEM_BA_data[["triad_census_FlyEM_BA"]] <- tirad_census_ba_fly
FlyEM_BA_data[["hub_score_FlyEM_BA"]] <- hs_ba_fly
FlyEM_BA_data[["modularity_FlyEM_BA"]] <- modularity_ba_fly
FlyEM_BA_data[["authority_score_FlyEM_BA"]] <- as_baFly
FlyEM_BA_data[["SW_ratio_FlyEM_BA"]] <- SM_Ratio_ba_fly
save(FlyEM_BA_data, file="FlyEM_BA_data.RData")
load("FlyEM_BA_data.RData")
View(celegans_data)
View(celegansBA_data)
View(celegansER_data)
View(celegansSW_data)
View(celegansSW_data)
View(FlyEM_SW_data)
View(FlyOP_data)
set.seed(2706)
er_FlyO <- sample_gnm(n=length(unique(archiuFlyOPtic[,1])), m=length(E(gFlyOpticS)))
deg_erFlyO <- degree(er_FlyO, mode="all")
deg.dist_erFlyOF <- degree_distribution(er_FlyO, cumulative=F, mode="all")
deg.dist_erFlyOT <- degree_distribution(er_FlyO, cumulative=T, mode="all")
tirad_census_er_FlyO = barplot(triad_census(er_FlyO), log="y")
#Hubs
hs_er_FlyO <- hub_score(er_FlyO, weights=NA)$vector
#Authorities
as_er_FlyO <- authority_score(er_FlyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_er_FlyO= transitivity(er_FlyO)/mean_distance(er_FlyO)
#modularity
library(leiden)
adj_mtx_er_FlyO  <- igraph::as_adjacency_matrix(er_FlyO)
wtc_er_FlyO <- leiden(adj_mtx_er_FlyO)
modularity_er_FlyO <- modularity(er_FlyO, wtc_er_FlyO)
FlyOP_ER_data <- list()
FlyOP_ER_data[["deg_distF_FlyOP_ER"]] <- deg.dist_erFlyOF
FlyOP_ER_data[["deg_distT_FlyOP_ER"]] <- deg.dist_erFlyOT
FlyOP_ER_data[["triad_census_FlyOP_ER"]] <- tirad_census_er_FlyO
FlyOP_ER_data[["hub_score_FlyOP_ER"]] <- hs_er_FlyO
FlyOP_ER_data[["modularity_FlyOP_ER"]] <- modularity_er_FlyO
FlyOP_ER_data[["authority_score_FlyOP_ER"]] <- as_er_FlyO
FlyOP_ER_data[["SW_ratio_FlyOP_ER"]] <- SM_Ratio_er_FlyO
save(FlyOP_ER_data, file="FlyOP_ER_data.RData")
load("FlyOP_ER_data.RData")
set.seed(2706)
er_FlyO <- sample_gnm(n=length(unique(archiuFlyOPtic[,1])), m=length(E(gFlyOpticS)))
deg_erFlyO <- degree(er_FlyO, mode="all")
deg.dist_erFlyOF <- degree_distribution(er_FlyO, cumulative=F, mode="all")
deg.dist_erFlyOT <- degree_distribution(er_FlyO, cumulative=T, mode="all")
tirad_census_er_FlyO = barplot(triad_census(er_FlyO), log="y")
#Hubs
hs_er_FlyO <- hub_score(er_FlyO, weights=NA)$vector
#Authorities
as_er_FlyO <- authority_score(er_FlyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_er_FlyO= transitivity(er_FlyO)/mean_distance(er_FlyO)
#modularity
library(leiden)
adj_mtx_er_FlyO  <- igraph::as_adjacency_matrix(er_FlyO)
wtc_er_FlyO <- leiden(adj_mtx_er_FlyO)
modularity_er_FlyO <- modularity(er_FlyO, wtc_er_FlyO)
FlyOP_ER_data <- list()
FlyOP_ER_data[["deg_distF_FlyOP_ER"]] <- deg.dist_erFlyOF
FlyOP_ER_data[["deg_distT_FlyOP_ER"]] <- deg.dist_erFlyOT
FlyOP_ER_data[["triad_census_FlyOP_ER"]] <- tirad_census_er_FlyO
FlyOP_ER_data[["hub_score_FlyOP_ER"]] <- hs_er_FlyO
FlyOP_ER_data[["modularity_FlyOP_ER"]] <- modularity_er_FlyO
FlyOP_ER_data[["authority_score_FlyOP_ER"]] <- as_er_FlyO
FlyOP_ER_data[["SW_ratio_FlyOP_ER"]] <- SM_Ratio_er_FlyO
save(FlyOP_ER_data, file="FlyOP_ER_data.RData")
load("FlyOP_ER_data.RData")
sw_FlyO <- sample_smallworld(dim=1, size=length(unique(archiuFlyOPtic[,1])), nei=11, p=0.1)
#plot(sw_Fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_swFlyO <- degree(sw_FlyO, mode="all")
deg.dist_swFlyFO <- degree_distribution(sw_FlyO, cumulative=F, mode="all")
deg.dist_swFlyTO <- degree_distribution(sw_FlyO, cumulative=T, mode="all")
tirad_census_sw_FlyO = barplot(triad_census(sw_FlyO), log="y")
#Hubs
hs_sw_FlyO <- hub_score(sw_FlyO, weights=NA)$vector
#Authorities
as_sw_FlyO <- authority_score(sw_FlyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_sw_FlyO= transitivity(sw_FlyO)/mean_distance(sw_FlyO)
#modularity
library(leiden)
adj_mtx_sw_FlyO  <- igraph::as_adjacency_matrix(sw_FlyO)
wtc_sw_FlyO <- leiden(adj_mtx_sw_FlyO)
modularity_sw_FlyO <- modularity(sw_FlyO, wtc_sw_FlyO)
FlyOP_SW_data <- list()
FlyOP_SW_data[["deg_distF_FlyOP_SW"]] <- deg.dist_swFlyFO
FlyOP_SW_data[["deg_distT_FlyOP_SW"]] <- deg.dist_swFlyTO
FlyOP_SW_data[["triad_census_FlyOP_SW"]] <- tirad_census_sw_FlyO
FlyOP_SW_data[["hub_score_FlyOP_SW"]] <- hs_sw_FlyO
FlyOP_SW_data[["modularity_FlyOP_SW"]] <- modularity_sw_FlyO
FlyOP_SW_data[["authority_score_FlyOP_SW"]] <- as_sw_FlyO
FlyOP_SW_data[["SW_ratio_FlyOP_SW"]] <- SM_Ratio_sw_FlyO
save(FlyOP_SW_data, file="FlyOP_SW_data.RData")
load("FlyOP_SW_data.RData")
ba_flyO <-  sample_pa(n=length(unique(archiuFlyOPtic[,1])), power=1, m=11,  directed=T)
#plot(ba_fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_baFlyO <- degree(ba_flyO, mode="all")
deg.dist_baFlyFO <- degree_distribution(ba_flyO, cumulative=F, mode="all")
deg.dist_baFyTO <- degree_distribution(ba_flyO, cumulative=T, mode="all")
tirad_census_ba_flyO = barplot(triad_census(ba_flyO), log="y")
#Hubs
hs_ba_flyO <- hub_score(ba_flyO, weights=NA)$vector
#Authorities
as_ba_flyO <- authority_score(ba_flyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_ba_flyO= transitivity(ba_flyO)/mean_distance(ba_flyO)
#modularity
library(leiden)
adj_mtx_ba_flyO  <- igraph::as_adjacency_matrix(ba_flyO)
wtc_ba_flyO <- leiden(adj_mtx_ba_flyO)
modularity_ba_flyO <- modularity(ba_flyO, wtc_ba_flyO)
FlyOP_BA_data <- list()
FlyOP_BA_data[["deg_distF_FlyOP_BA"]] <- deg.dist_baFlyFO
FlyOP_BA_data[["deg_distT_FlyOP_BA"]] <- deg.dist_baFyTO
FlyOP_BA_data[["triad_census_FlyOP_BA"]] <- tirad_census_ba_flyO
FlyOP_BA_data[["hub_score_FlyOP_BA"]] <- hs_ba_flyO
FlyOP_BA_data[["modularity_FlyOP_BA"]] <- modularity_ba_flyO
FlyOP_BA_data[["authority_score_FlyOP_BA"]] <- as_ba_flyO
FlyOP_BA_data[["SW_ratio_FlyOP_BA"]] <- SM_Ratio_ba_flyO
save(FlyOP_BA_data, file="FlyOP_BA_data.RData")
load("FlyOP_BA_data.RData")
set.seed(2706)
er_FlyO <- sample_gnm(n=length(unique(archiuFlyOPtic[,1])), m=length(E(gFlyOpticS)),directed=T)
deg_erFlyO <- degree(er_FlyO, mode="all")
deg.dist_erFlyOF <- degree_distribution(er_FlyO, cumulative=F, mode="all")
deg.dist_erFlyOT <- degree_distribution(er_FlyO, cumulative=T, mode="all")
tirad_census_er_FlyO = barplot(triad_census(er_FlyO), log="y")
#Hubs
hs_er_FlyO <- hub_score(er_FlyO, weights=NA)$vector
#Authorities
as_er_FlyO <- authority_score(er_FlyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_er_FlyO= transitivity(er_FlyO)/mean_distance(er_FlyO)
#modularity
library(leiden)
adj_mtx_er_FlyO  <- igraph::as_adjacency_matrix(er_FlyO)
wtc_er_FlyO <- leiden(adj_mtx_er_FlyO)
modularity_er_FlyO <- modularity(er_FlyO, wtc_er_FlyO)
FlyOP_ER_data <- list()
FlyOP_ER_data[["deg_distF_FlyOP_ER"]] <- deg.dist_erFlyOF
FlyOP_ER_data[["deg_distT_FlyOP_ER"]] <- deg.dist_erFlyOT
FlyOP_ER_data[["triad_census_FlyOP_ER"]] <- tirad_census_er_FlyO
FlyOP_ER_data[["hub_score_FlyOP_ER"]] <- hs_er_FlyO
FlyOP_ER_data[["modularity_FlyOP_ER"]] <- modularity_er_FlyO
FlyOP_ER_data[["authority_score_FlyOP_ER"]] <- as_er_FlyO
FlyOP_ER_data[["SW_ratio_FlyOP_ER"]] <- SM_Ratio_er_FlyO
save(FlyOP_ER_data, file="FlyOP_ER_data.RData")
load("FlyOP_ER_data.RData")
sw_FlyO <- sample_smallworld(dim=1, size=length(unique(archiuFlyOPtic[,1])), nei=11, p=0.1,directed=T)
#plot(sw_Fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_swFlyO <- degree(sw_FlyO, mode="all")
deg.dist_swFlyFO <- degree_distribution(sw_FlyO, cumulative=F, mode="all")
deg.dist_swFlyTO <- degree_distribution(sw_FlyO, cumulative=T, mode="all")
tirad_census_sw_FlyO = barplot(triad_census(sw_FlyO), log="y")
#Hubs
hs_sw_FlyO <- hub_score(sw_FlyO, weights=NA)$vector
#Authorities
as_sw_FlyO <- authority_score(sw_FlyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_sw_FlyO= transitivity(sw_FlyO)/mean_distance(sw_FlyO)
#modularity
library(leiden)
adj_mtx_sw_FlyO  <- igraph::as_adjacency_matrix(sw_FlyO)
wtc_sw_FlyO <- leiden(adj_mtx_sw_FlyO)
modularity_sw_FlyO <- modularity(sw_FlyO, wtc_sw_FlyO)
FlyOP_SW_data <- list()
FlyOP_SW_data[["deg_distF_FlyOP_SW"]] <- deg.dist_swFlyFO
FlyOP_SW_data[["deg_distT_FlyOP_SW"]] <- deg.dist_swFlyTO
FlyOP_SW_data[["triad_census_FlyOP_SW"]] <- tirad_census_sw_FlyO
FlyOP_SW_data[["hub_score_FlyOP_SW"]] <- hs_sw_FlyO
FlyOP_SW_data[["modularity_FlyOP_SW"]] <- modularity_sw_FlyO
FlyOP_SW_data[["authority_score_FlyOP_SW"]] <- as_sw_FlyO
FlyOP_SW_data[["SW_ratio_FlyOP_SW"]] <- SM_Ratio_sw_FlyO
save(FlyOP_SW_data, file="FlyOP_SW_data.RData")
load("FlyOP_SW_data.RData")
sw_FlyO <- sample_smallworld(dim=1, size=length(unique(archiuFlyOPtic[,1])), nei=11, p=0.1)
#plot(sw_Fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_swFlyO <- degree(sw_FlyO, mode="all")
deg.dist_swFlyFO <- degree_distribution(sw_FlyO, cumulative=F, mode="all")
deg.dist_swFlyTO <- degree_distribution(sw_FlyO, cumulative=T, mode="all")
tirad_census_sw_FlyO = barplot(triad_census(sw_FlyO), log="y")
#Hubs
hs_sw_FlyO <- hub_score(sw_FlyO, weights=NA)$vector
#Authorities
as_sw_FlyO <- authority_score(sw_FlyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_sw_FlyO= transitivity(sw_FlyO)/mean_distance(sw_FlyO)
#modularity
library(leiden)
adj_mtx_sw_FlyO  <- igraph::as_adjacency_matrix(sw_FlyO)
wtc_sw_FlyO <- leiden(adj_mtx_sw_FlyO)
modularity_sw_FlyO <- modularity(sw_FlyO, wtc_sw_FlyO)
FlyOP_SW_data <- list()
FlyOP_SW_data[["deg_distF_FlyOP_SW"]] <- deg.dist_swFlyFO
FlyOP_SW_data[["deg_distT_FlyOP_SW"]] <- deg.dist_swFlyTO
FlyOP_SW_data[["triad_census_FlyOP_SW"]] <- tirad_census_sw_FlyO
FlyOP_SW_data[["hub_score_FlyOP_SW"]] <- hs_sw_FlyO
FlyOP_SW_data[["modularity_FlyOP_SW"]] <- modularity_sw_FlyO
FlyOP_SW_data[["authority_score_FlyOP_SW"]] <- as_sw_FlyO
FlyOP_SW_data[["SW_ratio_FlyOP_SW"]] <- SM_Ratio_sw_FlyO
save(FlyOP_SW_data, file="FlyOP_SW_data.RData")
load("FlyOP_SW_data.RData")
