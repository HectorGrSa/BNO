library("igraph")
library("plyr")
archiu <- read.csv("NeuronConnect.csv",sep = ";")
setwd("C:/Users/hecto/OneDrive/Escritorio/BNO/Connectivity_data")
ba_flyO <-  sample_pa(n=length(unique(archiuFlyOPtic[,1])), power=1, m=11,  directed=T)
#plot(ba_fly, vertex.size=6, vertex.label=NA, layout=layout_in_circle)
deg_baFlyO <- degree(ba_flyO, mode="all")
deg.dist_baFlyFO <- degree_distribution(ba_flyO, cumulative=F, mode="all")
deg.dist_baFyTO <- degree_distribution(ba_flyO, cumulative=T, mode="all")
tirad_census_ba_flyO = barplot(triad_census(ba_flyO), log="y")
#Hubs
hs_ba_flyO <- hub_score(ba_flyO, weights=NA)$vector
#Authorities
as_ba_flyO <- authority_score(ba_flyO, weights=NA)$vector
#Small-Worldness ratio:
SM_Ratio_ba_flyO= transitivity(ba_flyO)/mean_distance(ba_flyO)
#modularity
library(leiden)
FlyOP_BA_data <- list()
FlyOP_BA_data[["deg_distF_FlyOP_BA"]] <- deg.dist_baFlyFO
FlyOP_BA_data[["deg_distT_FlyOP_BA"]] <- deg.dist_baFyTO
FlyOP_BA_data[["triad_census_FlyOP_BA"]] <- tirad_census_ba_flyO
FlyOP_BA_data[["hub_score_FlyOP_BA"]] <- hs_ba_flyO
FlyOP_BA_data[["modularity_FlyOP_BA"]] <- modularity_ba_flyO
FlyOP_BA_data[["authority_score_FlyOP_BA"]] <- as_ba_flyO
FlyOP_BA_data[["SW_ratio_FlyOP_BA"]] <- SM_Ratio_ba_flyO
save(FlyOP_BA_data, file="FlyOP_BA_data.RData")
load("FlyOP_BA_data.RData")
archiuFly <- read.csv("v1.2_exported-traced-adjacencies-v1.2.csv",sep = ",",header = F,skip = 1)
install.packages("languageserver")
